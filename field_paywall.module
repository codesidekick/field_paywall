<?php
/**
 * @file
 * Paywall field module.
 */

use \Drupal\Core\Render\Element;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_theme().
 */
function field_paywall_theme() {
  return array(
    // Theme functions in field_paywall.module.
    'paywall' => array(
      'variables' => array(
        'message' => '',
        'hidden_fields' => array(),
      ),
    ),
  );
}

/**
 * Implements hook_form_FORM_ID_alter() for 'field_storage_config_edit_form'.
 */
function field_paywall_form_field_storage_config_edit_form_alter(&$form, FormStateInterface $form_state) {
  if ($form_state->getFormObject()->getEntity()->getType() == 'paywall') {
    // Allow only a single paywall setting per entity.
    $form['cardinality_container']['cardinality']['#default_value'] = 1;
    $form['cardinality_container']['#access'] = FALSE;
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function field_paywall_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  if (!isset($entity->activePaywalls)) {
    return;
  }

  // Hide any field specified by the entity's currently active paywalls.
  foreach ($entity->activePaywalls as $paywall_name => $paywall_settings) {
    $hidden_fields = $paywall_settings['hidden_fields'];

    foreach ($hidden_fields as $hidden_field_name) {
      if (!empty($build[$hidden_field_name])) {
        $build[$hidden_field_name]['#access'] = FALSE;
      }
    }
  }
}
